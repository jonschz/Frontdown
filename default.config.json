{
	// Make sure the file is encoded in UTF-8 to avoid issues with non-ASCII characters in file names
	// Do not forget to escape backslashes in Windows file names, e.g. C:\\Users\\
	// the following two are mandatory!
	"sources": [
		{ "name": "drive-1", "dir": "<source directory>", "exclude-paths": []}
	],
	
	"backup_root_dir": "<target directory>",

	// These paths will not be considered when building the list of files and directories in the source directory.
	// Matches using fnmatch (https://docs.python.org/3.5/library/fnmatch.html)

	// possible values: save, mirror, hardlink
	// 'save' just copies new/changed files to the backup
	// 'mirror' does the same, but also deletes files that are not present in the source anymore
	// 'hardlink' will create hardlinks to unchanged files that already existed in the last backup to minimize space usage
	"mode": "hardlink",

	// in hardlink mode this is True automatically
	// if true, every new backup will be saved into a new folder
	"versioned": true,

	// Uses time.strftime (https://docs.python.org/3.5/library/time.html#time.strftime) to name the directory names for every new backup version
	// If such a directory already exits _2, _3, ... are appended.
	"version_name": "%Y_%m_%d",

	// only relevant when versioned = true, will not use the directory writing to to compare against, but the last backup
	// In hardlink mode this is true automatically
	"compare_with_last_backup": true,

	"save_actionfile": true,

	// Opens the action file. Only performed if save_actionfile = true.
	"open_actionfile": false,

	// Frontdown generates an actions.json file which holds all actions to be committed on to the file system to apply the backup
	// If you chose not to apply them immediately you have to execute "python applyActions.py <path to backup directory>" after generating actions.json
	// actions.html shows a more human readable version of it, so you can check it before applying.
	"apply_actions": true,

	// ordered list of possible elements "moddate" (modification date), "size", "bytes" (full comparison), "hash" (not yet implemented)
	"compare_method": ["moddate", "size"],

	// Log level, possible options: "ERROR", "WARNING", "INFO", "DEBUG"
	"log_level": "INFO",

	"save_actionhtml": true,
	"open_actionhtml": true,

    // Types of entries to exclude from action html. Possible values:
    // "copy", "hardlink", "delete", "new", "inNewDir", "modified", "existingDir", "newDir", "emptyDir"
	"exclude_actionhtml_actions": [],
	
	// maximum number of errors until the backup is called a failure (-1 to disable)
	"max_scanning_errors": 50,
	"max_backup_errors": 50,
	
	// decides what to do if the target drive is too full. Options: proceed, prompt, abort
	"target_drive_full_action": "prompt"
}
